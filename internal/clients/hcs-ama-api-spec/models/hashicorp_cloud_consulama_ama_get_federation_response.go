// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HashicorpCloudConsulamaAmaGetFederationResponse GetFederationResponse contains the primary cluster and all secondary
// clusters.
//
// swagger:model hashicorp.cloud.consulama.ama.GetFederationResponse
type HashicorpCloudConsulamaAmaGetFederationResponse struct {

	// primary_datacenter is the primary datacenter of a federation.
	PrimaryDatacenter *HashicorpCloudConsulamaAmaFederatedClusterResponse `json:"primaryDatacenter,omitempty"`

	// secondary_datacenters are a list of all secondary datacenters of a federation.
	SecondaryDatacenters []*HashicorpCloudConsulamaAmaFederatedClusterResponse `json:"secondaryDatacenters"`

	// state is the state of the federation. See FederationState for possible values.
	State HashicorpCloudConsulamaAmaGetFederationResponseFederationState `json:"state,omitempty"`
}

// Validate validates this hashicorp cloud consulama ama get federation response
func (m *HashicorpCloudConsulamaAmaGetFederationResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePrimaryDatacenter(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSecondaryDatacenters(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *HashicorpCloudConsulamaAmaGetFederationResponse) validatePrimaryDatacenter(formats strfmt.Registry) error {

	if swag.IsZero(m.PrimaryDatacenter) { // not required
		return nil
	}

	if m.PrimaryDatacenter != nil {
		if err := m.PrimaryDatacenter.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("primaryDatacenter")
			}
			return err
		}
	}

	return nil
}

func (m *HashicorpCloudConsulamaAmaGetFederationResponse) validateSecondaryDatacenters(formats strfmt.Registry) error {

	if swag.IsZero(m.SecondaryDatacenters) { // not required
		return nil
	}

	for i := 0; i < len(m.SecondaryDatacenters); i++ {
		if swag.IsZero(m.SecondaryDatacenters[i]) { // not required
			continue
		}

		if m.SecondaryDatacenters[i] != nil {
			if err := m.SecondaryDatacenters[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("secondaryDatacenters" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *HashicorpCloudConsulamaAmaGetFederationResponse) validateState(formats strfmt.Registry) error {

	if swag.IsZero(m.State) { // not required
		return nil
	}

	if err := m.State.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("state")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *HashicorpCloudConsulamaAmaGetFederationResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HashicorpCloudConsulamaAmaGetFederationResponse) UnmarshalBinary(b []byte) error {
	var res HashicorpCloudConsulamaAmaGetFederationResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
