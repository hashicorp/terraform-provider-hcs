// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

package helper

import (
	"testing"

	"github.com/stretchr/testify/require"
)

func Test_FederationTokensHaveSamePrimary(t *testing.T) {
	tcs := map[string]struct {
		expected bool
		token1   string
		token2   string
	}{
		"same token": {
			token1:   "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MDc2NTI3MTIsIm5iZiI6MTYwNzY0NTUxMiwiUHJpbWFyeSI6eyJ0eXBlIjoiaGFzaGljb3JwLmNvbnN1bC5jbHVzdGVyIiwidXVpZCI6IjExZWIzYjQxLWMyMmYtOGIyMS1iMmMwLTAyNDJhYzExMDAwOSIsImxvY2F0aW9uIjp7Im9yZ2FuaXphdGlvbl9pZCI6ImIwNjVjM2E3LWQ0MjAtNWMyMS04NDQ4LThhZGU3YzY0ZTAwNiIsInByb2plY3RfaWQiOiIxMWViM2I0MS04NjUxLWMyNGYtYjUwYS0wMjQyYWMxMTAwMDUiLCJyZWdpb24iOnsicHJvdmlkZXIiOiJhenVyZSIsInJlZ2lvbiI6Indlc3R1czIifX0sImRlc2NyaXB0aW9uIjoiSGFzaGlDb3JwIENsb3VkIENvbnN1bCBpbnN0YW5jZSAoXCIxMWViM2I0MS1jMjI1LWFmNmUtOGNjZC0wMjQyYWMxMTAwMTNcIikiLCJpZCI6IjExZWIzYjQxLWMyMjUtYWY2ZS04Y2NkLTAyNDJhYzExMDAxMyIsImludGVybmFsSWQiOiIxMWViM2I0MS1jMjJmLThiMjEtYjJjMC0wMjQyYWMxMTAwMDkifX0.dmF1bHQ6djE6eUhKNjlvTEpDTkZWRmdyTGZLNHp0UDlSNVRtUmZCVWtXVlZPTnAxUnMrOD0",
			token2:   "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MDc2NTI3MTIsIm5iZiI6MTYwNzY0NTUxMiwiUHJpbWFyeSI6eyJ0eXBlIjoiaGFzaGljb3JwLmNvbnN1bC5jbHVzdGVyIiwidXVpZCI6IjExZWIzYjQxLWMyMmYtOGIyMS1iMmMwLTAyNDJhYzExMDAwOSIsImxvY2F0aW9uIjp7Im9yZ2FuaXphdGlvbl9pZCI6ImIwNjVjM2E3LWQ0MjAtNWMyMS04NDQ4LThhZGU3YzY0ZTAwNiIsInByb2plY3RfaWQiOiIxMWViM2I0MS04NjUxLWMyNGYtYjUwYS0wMjQyYWMxMTAwMDUiLCJyZWdpb24iOnsicHJvdmlkZXIiOiJhenVyZSIsInJlZ2lvbiI6Indlc3R1czIifX0sImRlc2NyaXB0aW9uIjoiSGFzaGlDb3JwIENsb3VkIENvbnN1bCBpbnN0YW5jZSAoXCIxMWViM2I0MS1jMjI1LWFmNmUtOGNjZC0wMjQyYWMxMTAwMTNcIikiLCJpZCI6IjExZWIzYjQxLWMyMjUtYWY2ZS04Y2NkLTAyNDJhYzExMDAxMyIsImludGVybmFsSWQiOiIxMWViM2I0MS1jMjJmLThiMjEtYjJjMC0wMjQyYWMxMTAwMDkifX0.dmF1bHQ6djE6eUhKNjlvTEpDTkZWRmdyTGZLNHp0UDlSNVRtUmZCVWtXVlZPTnAxUnMrOD0",
			expected: true,
		},
		"same primary with different token": {
			token1:   "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MDc3MTk2MDksIm5iZiI6MTYwNzcxMjQwOSwiUHJpbWFyeSI6eyJ0eXBlIjoiaGFzaGljb3JwLmNvbnN1bC5jbHVzdGVyIiwidXVpZCI6IjExZWIzYmRmLWNkOTctNzUyMy04YTlhLTAyNDJhYzExMDAwOCIsImxvY2F0aW9uIjp7Im9yZ2FuaXphdGlvbl9pZCI6ImIwNjVjM2E3LWQ0MjAtNWMyMS04NDQ4LThhZGU3YzY0ZTAwNiIsInByb2plY3RfaWQiOiIxMWViM2JkZi05MWVjLWQ2NTktYjUwYS0wMjQyYWMxMTAwMDUiLCJyZWdpb24iOnsicHJvdmlkZXIiOiJhenVyZSIsInJlZ2lvbiI6Indlc3R1czIifX0sImRlc2NyaXB0aW9uIjoiSGFzaGlDb3JwIENsb3VkIENvbnN1bCBpbnN0YW5jZSAoXCIxMWViM2JkZi1jZDhkLWU4ZGItOGNjZC0wMjQyYWMxMTAwMTNcIikiLCJpZCI6IjExZWIzYmRmLWNkOGQtZThkYi04Y2NkLTAyNDJhYzExMDAxMyIsImludGVybmFsSWQiOiIxMWViM2JkZi1jZDk3LTc1MjMtOGE5YS0wMjQyYWMxMTAwMDgifX0.dmF1bHQ6djE6NWY3TXc2eUtxREFka0xkMGV1Yk5nOE9GcTdKZlFnc3hZSkdEeWxWZ2IvWT0",
			token2:   "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MDc3MjEzMTUsIm5iZiI6MTYwNzcxNDExNSwiUHJpbWFyeSI6eyJ0eXBlIjoiaGFzaGljb3JwLmNvbnN1bC5jbHVzdGVyIiwidXVpZCI6IjExZWIzYmRmLWNkOTctNzUyMy04YTlhLTAyNDJhYzExMDAwOCIsImxvY2F0aW9uIjp7Im9yZ2FuaXphdGlvbl9pZCI6ImIwNjVjM2E3LWQ0MjAtNWMyMS04NDQ4LThhZGU3YzY0ZTAwNiIsInByb2plY3RfaWQiOiIxMWViM2JkZi05MWVjLWQ2NTktYjUwYS0wMjQyYWMxMTAwMDUiLCJyZWdpb24iOnsicHJvdmlkZXIiOiJhenVyZSIsInJlZ2lvbiI6Indlc3R1czIifX0sImRlc2NyaXB0aW9uIjoiSGFzaGlDb3JwIENsb3VkIENvbnN1bCBpbnN0YW5jZSAoXCIxMWViM2JkZi1jZDhkLWU4ZGItOGNjZC0wMjQyYWMxMTAwMTNcIikiLCJpZCI6IjExZWIzYmRmLWNkOGQtZThkYi04Y2NkLTAyNDJhYzExMDAxMyIsImludGVybmFsSWQiOiIxMWViM2JkZi1jZDk3LTc1MjMtOGE5YS0wMjQyYWMxMTAwMDgifX0.dmF1bHQ6djE6My9EcTFXOENoUGpRSWpwczlhWXBMdzFGRjZjLzZDRVFVWnFjUXMva2FKZz0",
			expected: true,
		},
		"different primaries": {
			token1:   "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MDc2NTI3MTIsIm5iZiI6MTYwNzY0NTUxMiwiUHJpbWFyeSI6eyJ0eXBlIjoiaGFzaGljb3JwLmNvbnN1bC5jbHVzdGVyIiwidXVpZCI6IjExZWIzYjQxLWMyMmYtOGIyMS1iMmMwLTAyNDJhYzExMDAwOSIsImxvY2F0aW9uIjp7Im9yZ2FuaXphdGlvbl9pZCI6ImIwNjVjM2E3LWQ0MjAtNWMyMS04NDQ4LThhZGU3YzY0ZTAwNiIsInByb2plY3RfaWQiOiIxMWViM2I0MS04NjUxLWMyNGYtYjUwYS0wMjQyYWMxMTAwMDUiLCJyZWdpb24iOnsicHJvdmlkZXIiOiJhenVyZSIsInJlZ2lvbiI6Indlc3R1czIifX0sImRlc2NyaXB0aW9uIjoiSGFzaGlDb3JwIENsb3VkIENvbnN1bCBpbnN0YW5jZSAoXCIxMWViM2I0MS1jMjI1LWFmNmUtOGNjZC0wMjQyYWMxMTAwMTNcIikiLCJpZCI6IjExZWIzYjQxLWMyMjUtYWY2ZS04Y2NkLTAyNDJhYzExMDAxMyIsImludGVybmFsSWQiOiIxMWViM2I0MS1jMjJmLThiMjEtYjJjMC0wMjQyYWMxMTAwMDkifX0.dmF1bHQ6djE6eUhKNjlvTEpDTkZWRmdyTGZLNHp0UDlSNVRtUmZCVWtXVlZPTnAxUnMrOD0",
			token2:   "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MDc3MTk2MDksIm5iZiI6MTYwNzcxMjQwOSwiUHJpbWFyeSI6eyJ0eXBlIjoiaGFzaGljb3JwLmNvbnN1bC5jbHVzdGVyIiwidXVpZCI6IjExZWIzYmRmLWNkOTctNzUyMy04YTlhLTAyNDJhYzExMDAwOCIsImxvY2F0aW9uIjp7Im9yZ2FuaXphdGlvbl9pZCI6ImIwNjVjM2E3LWQ0MjAtNWMyMS04NDQ4LThhZGU3YzY0ZTAwNiIsInByb2plY3RfaWQiOiIxMWViM2JkZi05MWVjLWQ2NTktYjUwYS0wMjQyYWMxMTAwMDUiLCJyZWdpb24iOnsicHJvdmlkZXIiOiJhenVyZSIsInJlZ2lvbiI6Indlc3R1czIifX0sImRlc2NyaXB0aW9uIjoiSGFzaGlDb3JwIENsb3VkIENvbnN1bCBpbnN0YW5jZSAoXCIxMWViM2JkZi1jZDhkLWU4ZGItOGNjZC0wMjQyYWMxMTAwMTNcIikiLCJpZCI6IjExZWIzYmRmLWNkOGQtZThkYi04Y2NkLTAyNDJhYzExMDAxMyIsImludGVybmFsSWQiOiIxMWViM2JkZi1jZDk3LTc1MjMtOGE5YS0wMjQyYWMxMTAwMDgifX0.dmF1bHQ6djE6NWY3TXc2eUtxREFka0xkMGV1Yk5nOE9GcTdKZlFnc3hZSkdEeWxWZ2IvWT0",
			expected: false,
		},
		"one token is empty": {
			token1:   "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MDc2NTI3MTIsIm5iZiI6MTYwNzY0NTUxMiwiUHJpbWFyeSI6eyJ0eXBlIjoiaGFzaGljb3JwLmNvbnN1bC5jbHVzdGVyIiwidXVpZCI6IjExZWIzYjQxLWMyMmYtOGIyMS1iMmMwLTAyNDJhYzExMDAwOSIsImxvY2F0aW9uIjp7Im9yZ2FuaXphdGlvbl9pZCI6ImIwNjVjM2E3LWQ0MjAtNWMyMS04NDQ4LThhZGU3YzY0ZTAwNiIsInByb2plY3RfaWQiOiIxMWViM2I0MS04NjUxLWMyNGYtYjUwYS0wMjQyYWMxMTAwMDUiLCJyZWdpb24iOnsicHJvdmlkZXIiOiJhenVyZSIsInJlZ2lvbiI6Indlc3R1czIifX0sImRlc2NyaXB0aW9uIjoiSGFzaGlDb3JwIENsb3VkIENvbnN1bCBpbnN0YW5jZSAoXCIxMWViM2I0MS1jMjI1LWFmNmUtOGNjZC0wMjQyYWMxMTAwMTNcIikiLCJpZCI6IjExZWIzYjQxLWMyMjUtYWY2ZS04Y2NkLTAyNDJhYzExMDAxMyIsImludGVybmFsSWQiOiIxMWViM2I0MS1jMjJmLThiMjEtYjJjMC0wMjQyYWMxMTAwMDkifX0.dmF1bHQ6djE6eUhKNjlvTEpDTkZWRmdyTGZLNHp0UDlSNVRtUmZCVWtXVlZPTnAxUnMrOD0",
			token2:   "",
			expected: false,
		},
		"both tokens are empty": {
			token1:   "",
			token2:   "",
			expected: false,
		},
	}

	for n, tc := range tcs {
		t.Run(n, func(t *testing.T) {
			r := require.New(t)

			result := FederationTokensHaveSamePrimary(tc.token1, tc.token2)

			r.Equal(tc.expected, result)
		})
	}
}
